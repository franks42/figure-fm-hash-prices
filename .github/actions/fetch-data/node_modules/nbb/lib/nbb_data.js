import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
var r3=function(a,b){return $APP.x.h(a,b)?new $APP.G(null,3,5,$APP.I,[null,null,a],null):new $APP.G(null,3,5,$APP.I,[a,b,null],null)},jKa=function(a){return $APP.u(a)?$APP.If.j(function(b,c){var d=$APP.A.j(c,0,null);c=$APP.A.j(c,1,null);return $APP.lk.j(b,d,c)},$APP.Ji($APP.Op.h($APP.Ph.h($APP.Qp,$APP.gk(a)),null)),a):null},kKa=function(a,b,c){var d=$APP.C.h(a,c),e=$APP.C.h(b,c),f=s3(d,e),k=$APP.A.j(f,0,null),n=$APP.A.j(f,1,null);f=$APP.A.j(f,2,null);a=$APP.zf(a,c);b=$APP.zf(b,c);d=a&&b&&(null!=f||
null==d&&null==e);return new $APP.G(null,3,5,$APP.I,[!a||null==k&&d?null:$APP.th([c,k]),!b||null==n&&d?null:$APP.th([c,n]),d?$APP.th([c,f]):null],null)},lKa=function(a,b){var c=$APP.Xk,d=c.h,e=t3.j,f=$APP.ff(a)?a:$APP.Ji(a),k=$APP.ff(b)?b:$APP.Ji(b),n=$APP.Iq.g;a=$APP.Ge(a);b=$APP.Ge(b);return $APP.Ji(d.call(c,jKa,e.call(t3,f,k,n.call($APP.Iq,a>b?a:b))))},mKa=function(a,b){return new $APP.G(null,3,5,$APP.I,[$APP.xh($APP.rT.h(a,b)),$APP.xh($APP.rT.h(b,a)),$APP.xh($APP.qT.h(a,b))],null)},u3=function(a){if(null!=
a&&null!=a.aj)a=a.aj(a);else{var b=u3[$APP.ja(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=u3._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Xb("EqualityPartition.equality-partition",a);}return a},v3=function(a,b){if(null!=a&&null!=a.$i)a=a.$i(a,b);else{var c=v3[$APP.ja(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=v3._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.Xb("Diff.diff-similar",a);}return a},s3=function(a,b){return $APP.x.h(a,
b)?new $APP.G(null,3,5,$APP.I,[null,null,a],null):$APP.x.h(u3(a),u3(b))?v3(a,b):r3(a,b)},nKa=new $APP.F(null,"sequential","sequential",-1082983960),oKa=new $APP.t("clojure.data","diff","clojure.data/diff",-683865998,null),w3=new $APP.F(null,"atom","atom",-397043653),pKa=new $APP.t(null,"diff","diff",-518492986,null);var t3=function t3(a){switch(arguments.length){case 2:return t3.h(arguments[0],arguments[1]);case 3:return t3.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};t3.h=function(a,b){return t3.j(a,b,$APP.pT.h($APP.gk(a),$APP.gk(b)))};t3.j=function(a,b,c){return $APP.If.j(function(d,e){return $APP.Eq.g($APP.Xk.j($APP.Un,d,e))},new $APP.G(null,3,5,$APP.I,[null,null,null],null),$APP.Xk.h($APP.Wn.j(kKa,a,b),c))};t3.o=3;u3["null"]=function(){return w3};
u3.string=function(){return w3};u3.number=function(){return w3};u3.array=function(){return nKa};u3["function"]=function(){return w3};u3["boolean"]=function(){return w3};u3._=function(a){return(null!=a?a.G&1024||$APP.Wd===a.Pi||(a.G?0:$APP.Vb($APP.Ac,a)):$APP.Vb($APP.Ac,a))?$APP.Qo:(null!=a?a.G&4096||$APP.Wd===a.Ti||(a.G?0:$APP.Vb($APP.Ec,a)):$APP.Vb($APP.Ec,a))?$APP.ap:(null!=a?a.G&16777216||$APP.Wd===a.pg||(a.G?0:$APP.Vb($APP.Wc,a)):$APP.Vb($APP.Wc,a))?nKa:w3};
v3["null"]=function(a,b){return r3(a,b)};v3.string=function(a,b){return r3(a,b)};v3.number=function(a,b){return r3(a,b)};v3.array=function(a,b){return lKa(a,b)};v3["function"]=function(a,b){return r3(a,b)};v3["boolean"]=function(a,b){return r3(a,b)};
v3._=function(a,b){var c=function(){var d=u3(a);d=d instanceof $APP.F?d.ga:null;switch(d){case "atom":return r3;case "set":return mKa;case "sequential":return lKa;case "map":return t3;default:throw Error(["No matching clause: ",$APP.m.g(d)].join(""));}}();return c.h?c.h(a,b):c.call(null,a,b)};var qKa=$APP.nV.h($APP.rP,null),rKa=new $APP.h(null,1,[pKa,function(){var a=new $APP.ae(function(){return s3},oKa,$APP.Sj([$APP.W,$APP.O,$APP.bo,$APP.WC,$APP.ip,$APP.co,$APP.zS,$APP.Z,$APP.M,$APP.YI],[$APP.rP,pKa,"clojure/data.cljs",11,1,144,144,$APP.J(new $APP.G(null,2,5,$APP.I,[$APP.yN,$APP.xN],null)),"Recursively compares a and b, returning a tuple of\n  [things-only-in-a things-only-in-b things-in-both].\n  Comparison rules:\n\n  * For equal a and b, return [nil nil a].\n  * Maps are subdiffed where keys match and values differ.\n  * Sets are never subdiffed.\n  * All sequential things are treated as associative collections\n    by their indexes, with results returned as vectors.\n  * Everything else (including strings!) is treated as\n    an atom and compared for equality.",
$APP.l(s3)?s3.D:null])),b=$APP.q(a),c=$APP.Ve(a);a=$APP.l(null)?null:$APP.O.g(c);var d=new $APP.h(null,4,[$APP.W,qKa,$APP.O,a,$APP.Z,$APP.Z.g(c),$APP.M,$APP.M.g(c)],null);return $APP.l($APP.hu.g(c))?$APP.hV.j(a,b,d):$APP.l(function(){var e=$APP.tt.g(c);return $APP.l(e)?e:$APP.Jt.g(c)}())?$APP.iV.j(a,b,d):$APP.Nx.j(a,b,d)}()],null);$APP.Ay(new $APP.h(null,1,[$APP.Vt,new $APP.h(null,1,[$APP.rP,rKa],null)],null));