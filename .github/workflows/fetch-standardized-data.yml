name: Fetch Standardized Crypto Data

on:
  schedule:
    # Run every 5 minutes during market hours (9 AM - 6 PM EST, Mon-Fri)
    - cron: '*/5 9-18 * * 1-5'
    # Run every 15 minutes outside market hours
    - cron: '*/15 0-8,19-23 * * *'
    # Run every 15 minutes on weekends
    - cron: '*/15 * * * 0,6'
  workflow_dispatch: # Allow manual triggering

jobs:
  fetch-standardized-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies
      run: |
        npm install -g nbb
        # Verify nbb is working
        nbb --version

    - name: Fetch and convert crypto data to standardized format
      run: |
        nbb .github/workflows/scripts/fetch-standardized-crypto-data.cljs

    - name: Fetch exchange rates
      run: |
        nbb .github/workflows/scripts/fetch-exchange-rates.cljs

    - name: Commit and push if changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Check if we have data files to commit (following V1 approach)
        if [ -s data/standardized-prices.json ] && [ -s data/exchange-rates.json ]; then
          # Simple approach: create new branch from main, add files, force push (same as V1)
          git checkout -b data-updates-temp
          git add data/standardized-prices.json
          git add data/exchange-rates.json

          # Add optional files if they exist
          [ -f data/unmapped-fields.log ] && git add data/unmapped-fields.log
          [ -f data/standardized-metadata.json ] && git add data/standardized-metadata.json
          [ -f data/mapping-report.json ] && git add data/mapping-report.json

          git commit -m "Update crypto prices and exchange rates data

          ü§ñ Generated with standardized field mapping system
          üìä Unmapped fields logged for mapping table updates

          $(date '+%Y-%m-%d %H:%M:%S UTC')"

          # Force push to data-updates branch (overwrite completely, same as V1)
          git push origin data-updates-temp:data-updates --force
          echo "‚úÖ Data force pushed to data-updates branch successfully"
        else
          echo "‚ùå Error: Required data files are missing or empty"
          exit 1
        fi