name: Fetch Crypto Data

on:
  # Manual trigger for testing
  workflow_dispatch:
  
  # Run automatically every 10 minutes
  schedule:
    # Run every 10 minutes
    - cron: '*/10 * * * *'

permissions:
  contents: write

jobs:
  fetch-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
      
    - name: Fetch crypto data
      run: |
        # Create data directory if it doesn't exist
        mkdir -p data
        
        # Fetch data from Figure Markets API
        echo "Fetching crypto data from Figure Markets..."
        
        CRYPTO_RESPONSE=$(curl -s "https://www.figuremarkets.com/service-hft-exchange/api/v1/markets")
        STOCK_RESPONSE=$(curl -s "https://query1.finance.yahoo.com/v8/finance/chart/FIGR")
        
        # Check if responses are valid
        if [ -z "$CRYPTO_RESPONSE" ] || [ "$CRYPTO_RESPONSE" = "null" ]; then
          echo "Error: Failed to fetch crypto data from Figure Markets"
          exit 1
        fi
        
        if [ -z "$STOCK_RESPONSE" ] || [ "$STOCK_RESPONSE" = "null" ]; then
          echo "Error: Failed to fetch stock data from Yahoo Finance"
          exit 1
        fi
        
        # Combine crypto and stock data
        jq --null-input \
           --argjson crypto "$CRYPTO_RESPONSE" \
           --argjson stock "$STOCK_RESPONSE" \
           --arg timestamp "$(date -u +%s)" \
           --arg last_update "$(date -u '+%Y-%m-%d %H:%M:%S UTC')" \
           '
           # Process crypto data from Figure Markets
           ($crypto.data[] | select(.symbol | test("-USD$")) | select(.symbol | test("^(USDT|USDC)-USD$") | not)) as $cryptos |
           reduce $cryptos as $item ({}; 
             . + {
               ($item.symbol | gsub("-USD"; "") | ascii_downcase): {
                 "usd": ($item.midMarketPrice // $item.lastTradedPrice // 0 | tonumber),
                 "usd_24h_change": ($item.percentageChange24h // 0 | tonumber * 100),
                 "usd_24h_vol": ($item.volume24h // 0 | tonumber),
                 "usd_market_cap": null,
                 "symbol": $item.symbol,
                 "bid": ($item.bestBid // 0 | tonumber),
                 "ask": ($item.bestAsk // 0 | tonumber),
                 "last_price": ($item.lastTradedPrice // 0 | tonumber),
                 "trades_24h": ($item.tradeCount24h // 0),
                 "type": "crypto"
               }
             }
           ) |
           # Add FIGR stock data
           . + {
             "figr": {
               "usd": $stock.chart.result[0].meta.regularMarketPrice,
               "usd_24h_change": (($stock.chart.result[0].meta.regularMarketPrice / $stock.chart.result[0].meta.previousClose - 1) * 100),
               "usd_24h_vol": $stock.chart.result[0].meta.regularMarketVolume,
               "usd_market_cap": null,
               "symbol": "FIGR",
               "bid": null,
               "ask": null,
               "last_price": $stock.chart.result[0].meta.regularMarketPrice,
               "trades_24h": null,
               "type": "stock",
               "day_high": $stock.chart.result[0].meta.regularMarketDayHigh,
               "day_low": $stock.chart.result[0].meta.regularMarketDayLow
             }
           } |
           # Add metadata
           . + {
             "timestamp": ($timestamp | tonumber),
             "source": "figuremarkets+yahoo",
             "last_update": $last_update
           }
           ' > data/crypto-prices.json
        
        # Display the fetched data for verification
        echo "Data fetched successfully:"
        cat data/crypto-prices.json | jq '.'
        
    - name: Commit and push if changed
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Check if file exists and has content
        if [ -s data/crypto-prices.json ]; then
          git add data/crypto-prices.json
          
          # Check if there are changes to commit
          if ! git diff --staged --quiet; then
            git commit -m "Update crypto data $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push
            echo "✅ Data committed and pushed successfully"
          else
            echo "ℹ️ No changes to commit"
          fi
        else
          echo "❌ Error: crypto-prices.json is empty or doesn't exist"
          exit 1
        fi